@* バンドルを使用している場合はこのセクションを削除します *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "パスワードのリセット";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;

    // セットアップ検証
    Validation.RequireField("newPassword", "新しいパスワード フィールドは必須入力項目です。");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("newPassword", "新しいパスワードと確認のパスワードが一致しません。"));
    Validation.RequireField("passwordResetToken", "パスワード リセット トークン フィールドは必須入力項目です。");
    Validation.Add("newPassword",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "新しいパスワードは 6 文字以上にする必要があります"));

    if (IsPost && Validation.IsValid()) {
        AntiForgery.Validate();
        var newPassword = Request["newPassword"];
        var confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword)) {
            isSuccess = true;
        } else {
            ModelState.AddError("passwordResetToken", "パスワード リセット トークンが無効です。");
            tokenExpired = true;
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>パスワードをリセットするには、以下のフォームを使用してください。</h2>
</hgroup>

@if (!WebMail.SmtpServer.IsEmpty()) {
    if (!Validation.IsValid()) {
        <p class="validation-summary-errors">
            @if (tokenExpired) {
                <text>パスワード リセット トークンが間違っています。または、有効期限が切れている可能性があります。新しいトークンを生成するには、<a href="~/Account/ForgotPassword">パスワードを忘れた場合のページ</a> 
                にアクセスしてください。</text>
            } else {
                <text>パスワードをリセットできませんでした。エラーを修正し、再試行してください。</text>
            }
        </p>
    }

    if (isSuccess) {
        <p class="message-success">
            パスワードが変更されました! ログインするには、<a href="~/Account/Login" title="ログイン">ここをクリック</a>します。
        </p>
    }

    <form method="post">
        @AntiForgery.GetHtml()
        <fieldset>
            <legend>パスワード変更のフォーム</legend>
            <ol>
                <li class="new-password">
                    <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>新しいパスワード</label> 
                    <input type="password" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                    @Html.ValidationMessage("newPassword")
                </li>
                <li class="confirm-password">
                    <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>パスワードの確認入力</label> 
                    <input type="password" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                    @Html.ValidationMessage("confirmPassword")
                </li>
                <li class="reset-token">
                    <label for="resetToken" @if (!ModelState.IsValidField("resetToken")) {<text>class="error-label"</text>}>Password reset token</label> 
                    <input type="text" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") />
                    @Html.ValidationMessage("resetToken")
                </li>
            </ol>
            <input type="submit" value="パスワードのリセット" disabled="@isSuccess"/>
        </fieldset>
    </form>
} else {
    <p class="message-info">
        SMTP サーバーが適切に構成されていないため、この Web サイトでは 
        パスワードの回復が無効です。パスワードをリセットするには、このサイトの 
        所有者に連絡してください。
    </p>
}
